/* WP File Structure */
header.php
footer.php
index.php (required)
front-page.php
page.php
404.php
functions.php
home.php
sidebar.php
search.php
style.css (required)
single.php
comments.php
archive.php
screenshot.png (theme cover image)

// Preloader in WordPress
add_action( 'init','WordPressPreloader' );
function WordPressPreloader() { if(!is_admin() &&  $GLOBALS["pagenow"] !== "wp-login.php" ) { 
$delay = 1;	//seconds
$loader = 'http://allprocoding2.epizy.com/wp-content/uploads/2023/05/Blocks-1s-200px-1.svg';
$overlayColor = '#ffffff';	

echo '<div class="Preloader"><img src="'.$loader.'" alt="" style="height: 150px;"></div>

<style>
.Preloader {
   
position: fixed;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    background-color: '.$overlayColor.';
    z-index: 100000;
    display: flex;
   
align-items: center;
    justify-content: space-around;
}
</style>

<script>
document.body.style.overflow = "hidden";
document.addEventListener("DOMContentLoaded", () => setTimeout( function(){
document.querySelector("div.Preloader").remove();
document.body.style.overflow = "visible"; } , '.$delay.' * 1000));
</script>
'; }}

//Romove Adminbar
 add_filter('show_admin_bar', '__return_false'); 

//Increase WP Memory limit (wp-config.php)
define('WP_MEMORY_LIMIT','256M');

//Increase WP Larger Memory limit 
define( 'WP_MAX_MEMORY_LIMIT', '256M' )

//Disable auto WP Updates
define('WP_AUTO_UPDATE_CORE', false);

// Change the default excerpt length in WordPress (default is 55 words)
function change_excerpt_length( $length ) {
 return 24;
}
add_filter( 'excerpt_length', 'change_excerpt_length', 9999 );

//Adds a custom logo to the top left of the WordPress admin
function athemeart_custom_logo_wp_dashboard() {
echo "";
}
add_action('wp_before_admin_bar_render', 'athemeart_custom_logo_wp_dashboard');

//Disable XML-RPC
add_filter('xmlrpc_enabled', '__return_false');

//If plugins not load
define('WP_HTTP_BLOCK_EXTERNAL', false);

//Hiding WordPress version:
function wp_version_remove_version() {
return '';
}
add_filter('the_generator', 'wp_version_remove_version');

//File Editing Disable
define('DISALLOW_FILE_EDIT', true);

//Require a Featured Post Image
add_action('save_post', 'wpds_check_thumbnail');
add_action('admin_notices', 'wpds_thumbnail_error');
function wpds_check_thumbnail($post_id) {
    // change to any custom post type
    if(get_post_type($post_id) != 'post')
        return;
    if ( !has_post_thumbnail( $post_id ) ) {
        // set a transient to show the users an admin message
        set_transient( "has_post_thumbnail", "no" );
        // unhook this function so it doesn't loop infinitely
        remove_action('save_post', 'wpds_check_thumbnail');
        // update the post set it to draft
        wp_update_post(array('ID' => $post_id, 'post_status' => 'draft'));
        add_action('save_post', 'wpds_check_thumbnail');
    } else {
        delete_transient( "has_post_thumbnail" );
    }
}
function wpds_thumbnail_error()
{
    // check if the transient is set, and display the error message
    if ( get_transient( "has_post_thumbnail" ) == "no" ) {
        echo "<div id='message' class='error'><p><strong>You must select Featured Image. Your Post is saved but it can not be published.</strong></p></div>";
        delete_transient( "has_post_thumbnail" );
    }
}

//Add Custom Image Sizes
if ( function_exists( 'add_image_size' ) ) {
    add_image_size( 'new-size', 300, 100, true ); //(cropped)
}
add_filter('image_size_names_choose', 'my_image_sizes');
function my_image_sizes($sizes) {
        $addsizes = array(
                "new-size" => __( "New Size")
                );
        $newsizes = array_merge($sizes, $addsizes);
        return $newsizes;
}

//Sharpen Uploaded Images when Resized
function ajx_sharpen_resized_files( $resized_file ) {
    $image = wp_load_image( $resized_file );
    if ( !is_resource( $image ) )
        return new WP_Error( 'error_loading_image', $image, $file );
    $size = @getimagesize( $resized_file );
    if ( !$size )
        return new WP_Error('invalid_image', __('Could not read image size'), $file);
    list($orig_w, $orig_h, $orig_type) = $size;

    switch ( $orig_type ) {
        case IMAGETYPE_JPEG:
            $matrix = array(
                array(-1, -1, -1),
                array(-1, 16, -1),
                array(-1, -1, -1),
            );
            $divisor = array_sum(array_map('array_sum', $matrix));
            $offset = 0; 
            imageconvolution($image, $matrix, $divisor, $offset);
            imagejpeg($image, $resized_file,apply_filters( 'jpeg_quality', 90, 'edit_image' ));
            break;
        case IMAGETYPE_PNG:
            return $resized_file;
        case IMAGETYPE_GIF:
            return $resized_file;
    }
    return $resized_file;
}   
add_filter('image_make_intermediate_size', 'ajx_sharpen_resized_files',900);

//Custom WordPress User Roles
// To add the new role, using 'international' as the short name and
// 'International Blogger' as the displayed name in the User list and edit page:
/*
add_role('international', 'International Blogger', array(
    'read' => true, // True allows that capability, False specifically removes it.
    'edit_posts' => true,
    'delete_posts' => true,
    'edit_published_posts' => true,
    'publish_posts' => true,
    'edit_files' => true,
    'import' => true,
    'upload_files' => true //last in array needs no comma!
));
*/

// To remove one outright or remove one of the defaults:
/* 
remove_role('international');
*/

// Theme Snippet (style.css)
/**
 * Theme Name:        Fabled Sunset
 * Theme URI:         https://example.com/fabled-sunset
 * Description:       Custom theme description...
 * Version:           1.0.0
 * Author:            Your Name
 * Author URI:        https://example.com
 * Tags:              block-patterns, full-site-editing
 * Text Domain:       fabled-sunset
 * Domain Path:       /assets/lang
 * Tested up to:      6.4
 * Requires at least: 6.2
 * Requires PHP:      7.4
 * License:           GNU General Public License v2.0 or later
 * License URI:       https://www.gnu.org/licenses/gpl-2.0.html
 */

/* Custom Plugin */
/*
 * Plugin Name:       My Basics Plugin
 * Plugin URI:        https://example.com/plugins/the-basics/
 * Description:       Handle the basics with this plugin.
 * Version:           1.10.3
 * Requires at least: 5.2
 * Requires PHP:      7.2
 * Author:            John Smith
 * Author URI:        https://author.example.com/
 * License:           GPL v2 or later
 * License URI:       https://www.gnu.org/licenses/gpl-2.0.html
 * Update URI:        https://example.com/my-plugin/
 * Text Domain:       my-basics-plugin
 * Domain Path:       /languages
 */

/* Main Plugin File */
function my_plugin_activate() {
  add_option( 'Activated_Plugin', 'Plugin-Slug' );
  /* activation code here */
}
register_activation_hook( __FILE__, 'my_plugin_activate' );

function load_plugin() {
    if ( is_admin() && get_option( 'Activated_Plugin' ) == 'Plugin-Slug' ) {
        delete_option( 'Activated_Plugin' );
        /* do stuff once right after activation */
        // example: add_action( 'init', 'my_init_function' );
    }
}
add_action( 'admin_init', 'load_plugin' );

/* Main Plugin File */
register_activation_hook( __FILE__, function() {
  add_option('Activated_Plugin','Plugin-Slug');
  /* activation code here */
});

add_action('admin_init','load_plugin');
function load_plugin() {
    if(is_admin()&&get_option('Activated_Plugin')=='Plugin-Slug') {
     delete_option('Activated_Plugin');
     /* do some stuff once right after activation */
    }
}

/* Custom Post Type */
/**
 * Register post type.
 *
 */
function post_type_name_init() {
    $labels = array(
        'name'               => _x( 'Projects', 'post type general name', 'your-plugin-textdomain' ),
        'singular_name'      => _x( 'Projects', 'post type singular name', 'your-plugin-textdomain' ),
        'menu_name'          => _x( 'Projects', 'admin menu', 'your-plugin-textdomain' ),
        'name_admin_bar'     => _x( 'Project', 'add new on admin bar', 'your-plugin-textdomain' ),
        'add_new'            => _x( 'Add New', 'project', 'your-plugin-textdomain' ),
        'add_new_item'       => __( 'Add New Project', 'your-plugin-textdomain' ),
        'new_item'           => __( 'New Project', 'your-plugin-textdomain' ),
        'edit_item'          => __( 'Edit Project', 'your-plugin-textdomain' ),
        'view_item'          => __( 'View Project', 'your-plugin-textdomain' ),
        'all_items'          => __( 'All Projects', 'your-plugin-textdomain' ),
        'search_items'       => __( 'Search Project', 'your-plugin-textdomain' ),
        'parent_item_colon'  => __( 'Parent Project:', 'your-plugin-textdomain' ),
        'not_found'          => __( 'No projects found.', 'your-plugin-textdomain' ),
        'not_found_in_trash' => __( 'No projects found in Trash.', 'your-plugin-textdomain' )
    );

    $args = array(
        'labels'             => $labels,
        'description'        => __( 'Description.', 'your-plugin-textdomain' ),
        'public'             => true,
        'publicly_queryable' => true,
        'show_ui'            => true,
        'show_in_admin_bar'  => true,
        'query_var'          => true,
        'rewrite'            => array( 'slug' => 'projects' ),
        'capability_type'    => 'post',
        'has_archive'        => true,
        'hierarchical'       => false,
        'menu_icon'          => 'dashicons-images-alt2',
        'menu_position'      => 5,
        'supports'           => array(
            'title',
            'editor',
            'excerpt',
            'trackbacks',
            'custom-fields',
            'comments',
            'revisions',
            'thumbnail',
            'author',
            'page-attributes')
    );

    register_post_type( 'projects', $args );

}
add_action( 'init', 'post_type_name_init' );

function create_book_tax_function() {
    register_taxonomy(
        'project-types',
        'projects',
        array(
            'label' => __( 'Project Types' ),
            'rewrite' => array( 'slug' => 'project-types' ),
            'hierarchical' => true,
        )
    );
}
add_action( 'init', 'create_book_tax_function' );

/* Querying By Post Type */
<?php
    $args = array('post_type' => 'news', 'page_per_post' => 5, 'orderby' => 'title', 'order' => 'ASC');	
    $newsPost = new WP_Query($args); 
    // $newsPost = new WP_Query('post_type=news&page_per_post=5&orderby=title&order=ASC');
    if($newsPost->have_posts()):
        while($newsPost->have_posts()): $newsPost->the_post();
            the_content();
        endwhile; 
    endif; 
    wp_reset_postdata(); 
?>

/* Taxonomy */
/*
* Plugin Name: Course Taxonomy
* Description: A short example showing how to add a taxonomy called Course.
* Version: 1.0
* Author: developer.wordpress.org
* Author URI: https://codex.wordpress.org/User:Aternus
*/

function wporg_register_taxonomy_course() {
	 $labels = array(
		 'name'              => _x( 'Courses', 'taxonomy general name' ),
		 'singular_name'     => _x( 'Course', 'taxonomy singular name' ),
		 'search_items'      => __( 'Search Courses' ),
		 'all_items'         => __( 'All Courses' ),
		 'parent_item'       => __( 'Parent Course' ),
		 'parent_item_colon' => __( 'Parent Course:' ),
		 'edit_item'         => __( 'Edit Course' ),
		 'update_item'       => __( 'Update Course' ),
		 'add_new_item'      => __( 'Add New Course' ),
		 'new_item_name'     => __( 'New Course Name' ),
		 'menu_name'         => __( 'Course' ),
	 );
	 $args   = array(
		 'hierarchical'      => true, // make it hierarchical (like categories)
		 'labels'            => $labels,
		 'show_ui'           => true,
		 'show_admin_column' => true,
		 'query_var'         => true,
		 'rewrite'           => [ 'slug' => 'course' ],
	 );
	 register_taxonomy( 'course', [ 'post' ], $args );
}
add_action( 'init', 'wporg_register_taxonomy_course' );


/* Register Custom Menu */
function custom_menus() {
 register_nav_menus(
  array(
   'primary' => 'Primary menu',
   'secondary' => 'Secondary menu',
   'tertiary' => 'Tertiary menu'
  )
 );
}
add_action( 'init', 'custom_menus' );

OR

function register_my_menus(){
register_nav_menus(
	array(
		'primary-menu'=>__('Primary Menu'),
		'footer-menu'=>__('Footer Menu'),
		'additional-menu'=>__('Additional Menu')
	)
);
}
add_action('init','register_my_menus');
.

/* page.php */
<?php
get_header();
 if (have_posts()): 
  while (have_posts()): the_post(); 
   the_content();
  endwhile;
 endif;
get_footer();
?>

// Replace the WordPress login logo with your custom logo
if( !function_exists( 'custom_login_logo' ) ){
    function custom_login_logo() {
        echo '<style>
            h1 a { background-image: url("path/to/your/logo.png") !important; }
        </style>';
    }
    add_action( 'login_head', 'custom_login_logo' );
}

// Changes main login page url
function wp_login_page_URL( $url ) {
	$url = home_url('/');
	return $url;
}
add_filter('login_headerurl', 'wp_login_page_URL');

// Replaces default WordPress logo
function add_logo_Login_page() {
	echo '<style>.login h1 a {
	background-repeat: no-repeat;
	bakground-image: url([new_image_path]);
	background-position: center center;
	background-size: contain !important;
	width: 100% !important;
}
</style>';
}

add_action('login_head', 'add_logo_Login_page');

// Paginate Your Site Without Plugins
global $wp_query;
$total = $wp_query->max_num_pages;
// only bother with the rest if we have more than 1 page!
if ( $total > 1 )  {
     // get the current page
     if ( !$current_page = get_query_var('paged') )
          $current_page = 1;
     // structure of "format" depends on whether we're using pretty permalinks
     $format = empty( get_option('permalink_structure') ) ? '&page=%#%' : 'page/%#%/';
     echo paginate_links(array(
          'base' => get_pagenum_link(1) . '%_%',
          'format' => $format,
          'current' => $current_page,
          'total' => $total,
          'mid_size' => 4,
          'type' => 'list'
     ));
}

// Show Post Thumbnails in RSS Feed
// Put post thumbnails into rss feed
function wpfme_feed_post_thumbnail($content) {
global $post;
if(has_post_thumbnail($post->ID)) {
$content = '' . $content;
}
return $content;
}
add_filter('the_excerpt_rss', 'wpfme_feed_post_thumbnail');
add_filter('the_content_feed', 'wpfme_feed_post_thumbnail');

//Change the Author Permalink Structure
add_action('init', 'cng_author_base');
function cng_author_base() {
    global $wp_rewrite;
    $author_slug = 'profile'; // change slug name
    $wp_rewrite->author_base = $author_slug;
}

//WP Snippets URLs
https://managewp.com/blog/enhanced-performance-code-snippets

//WooCommerce Snippets
https://medium.com/@skhans/50-woocommerce-snippets-you-need-as-a-wordpress-developer-9d2d08a18b9a
https://www.wpthemedetector.com/useful-code-snippets-wordpress/

// purge entire cache
if(function_exists('w3tc_pgcache_flush')) {  w3tc_pgcache_flush();  }

// flush individual post/page
if (function_exists('w3tc_pgcache_flush_post')) {  w3tc_pgcache_flush_post($post_id); }

...............................................................................................................................................................................................

40+ Best WordPress Plugins
1. Hostinger AI Assistant – AI Content Generator Plugin
2. WooCommerce – WordPress eCommerce Plugin
3. Spectra – Free WordPress Page Builder
4. Wordfence – WordPress Security Plugin
5. AIOSEO – WordPress SEO Plugin
6. WPForms – WordPress Form Builder Plugin
7. LiteSpeed Cache – WordPress Caching Plugin
8. MemberPress – Membership Plugin
9. bbPress – Forum Plugin
10. UpdraftPlus – WordPress Backup Plugin
11. Weglot – WordPress Translation Plugin
12. Stackable – Ultimate Gutenberg Blocks for WordPress
13. AddToAny – Social Media Integration Plugin for WordPress
14. Mailchimp for WordPress – Email Subscription Plugin
15. WP Mail SMTP – Newsletter Plugin
16. Ultimate Blocks – Free Gutenberg Blocks Plugin
17. Smash Balloon Social Photo Feed – Instagram Integration Plugin for WordPress
18. ELEX WooCommerce Abandoned Cart Recovery with Dynamic Coupons – The Abandoned Cart Recovery Plugin
19. Booking Calendar – WordPress Booking Plugin
20. The Events Calendar – Calendar Plugin
21. Knowledge Base for Documentation and FAQs – Wiki Plugin for WordPress
22. Forminator – Quiz Plugin
23. WP Activity Log – Most Comprehensive WordPress Activity Log Plugin
24. ShareThis Share Buttons – WordPress Social Sharing Plugin
25. Connections Business Directory – Directory Plugin
26. Icegram – Pop-Up Plugin
27. HubSpot – CRM Plugin
28. 3CX Live Chat – Live Chat Plugin
29. WP RSS Aggregator – RSS Feed Plugin
30. PDF Embedder – PDF Viewer Plugin
31. MonsterInsights – WordPress Google Analytics Plugin
32. CoSchedule – Project Management Plugin
33. GiveWP – Donation Plugin
34. BackWPup – WordPress Database Plugin
35. Pretty Links – Affiliate Program Plugin
36. Tutor LMS – LMS Plugin for WordPress
37. Max Mega Menu – WordPress Menu Plugin
38. OptinMonster – Plugin for WooCommerce
39. Customer Reviews for WooCommerce – Customer Review Plugin
40. wpDiscuz – WordPress Comment Plugin
41. Visualizer – WordPress Table Plugin
42. Ivory Search – Search Plugin
43. Essential Real Estate – Real Estate Plugin
44. Download Monitor – Download Manager Plugin
45. MetaSlider – WordPress Slider Plugin
46. GTranslate – WordPress Translation Plugin
47. Akismet – WordPress Plugin for Spam Protection
48. Thrive Suite – WordPress Plugin Bundle
